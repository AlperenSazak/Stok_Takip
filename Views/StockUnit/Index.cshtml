<div class="container-fluid">
    <div class="row my-4">
        <div class="col-md-6 text-start">
            <h5>Stok Birimi Listesi</h5>

        </div>
        <div class="col-md-6 text-end">
            <partial name="_AddStockUnitModal.cshtml" />
        </div>

    </div>
    <div class="row">
        <div class="col-md-12">
            <table class="table" id="stock_unit_tbl">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">Id</th>
                        <th scope="col">Birim Kodu</th>
                        <th scope="col">Stok Türü</th>
                        <th scope="col">Tür</th>
                        <th scope="col">Açıklama</th>
                        <th scope="col">Alış Fiyatı</th>
                        <th></th>
                        <th scope="col">Satış Fiyatı</th>
                        <th></th>
                        <th scope="col">Kağıt Ağırlığı</th>
                        <th scope="col">Durum</th>
                        <th scope="col">İşlemler</th>

                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>
@section scripts{
    <script>
        $(document).ready(function () {

            getStockUnitTable();

            if ('@ViewBag.Message' != "") {
                Swal.fire(
                    'Başarılı.',
                    '@ViewBag.Message',
                    'success'
                )
            }
            if ('@ViewBag.Error' != "") {
                Swal.fire(
                    'Başarısız.',
                    '@ViewBag.Error',
                    'error'
                )
            }

            // get table
            function getStockUnitTable() {
                console.log('çalıştı')

                $.ajax({
                    type: 'GET',
                    url: '/StockUnit/GetAll',
                    success: function (data) {
                        console.log(data);
                        var dataTable = $("#stock_unit_tbl").DataTable();
                        dataTable.clear().draw();
                        $.each(data, function (index, data) {
                           
                            dataTable.row.add([
                                data.id,
                                data.unitCode,
                                data.stockType,
                                data.quantityType,
                                data.description,
                                '<span class="bg-purchase"> <a>' + data.purchasePrice + '</a></span>',
                                data.purchaseCurrency,
                                '<span class="bg-sale"> <a>' + data.salePrice + '</a></span>',                                
                                data.saleCurrency,
                                data.paperWeight,
                                data.status == false ? '<span class="text-bold text-danger">Pasif</span>' : '<span class="text-bold text-success">Aktif</span>',
                                '<a href="/StockUnit/Update/id?id=' + data.id + '" class="btn btn-update"><i class="fa-solid fa-gear"></i></a> <button class="btn btn-delete" value=' + data.id + '><i class="fa-solid fa-trash"></i></button>'
                            ]).draw();

                        });

                    },
                    error: function (data, message) {

                        console.log(data, message)
                    }
                });
            }

            //validation start
            $("#stockUnitForm").validate({
                rules: {
                    "unitCode": {
                        required: true,
                        minlength: 3,
                        maxlength: 15
                    },
                    "stockTypeId": {
                        required: true
                    },
                    "quantityUnitId": {
                        required: true
                    },
                    "description": {
                        required: true,
                        minlength: 5,
                        maxlength: 15
                    },
                    "purchasePrice": {
                        required: true
                    },
                    "purchaseCurrencyId": {
                        required: true
                    },
                    "salePrice": {
                        required: true
                    },
                    "salesCurrencyId": {
                        required: true
                    },
                    "paperWeight": {
                        required: true
                    }
                },
                messages: {
                    "unitCode": {
                        required: "Lütfen Stok Birim Kodu Giriniz",
                        minlength: "lütfen 3 Karakterlik Birim Kodu Giriniz",
                        maxlength: "lütfen 15 Karakterlik Birim Kodu Giriniz"
                    },
                    "stockTypeId": {
                        required: "Lütfen Bir Stok Türü Seçiniz"
                    },
                    "quantityUnitId": {
                        required: "Lütfen Bir Miktar Birimi Seçiniz"
                    },
                    "description": {
                        required: "Lütfen Açıklama Giriniz",
                        minlength: "Lütfen 5 Karakterlik Açıklama Giriniz",
                        maxlength: "Lütfen 15 Karakterlik Açıklama Giriniz"
                    },
                    "purchasePrice": {
                        required: "Lütfen Bir Alış Fiyatı Giriniz",
                    },
                    "purchaseCurrencyId": {
                        required: "Lütfen Alış Fiyatı Para Birimi Giriniz",
                    },
                    "salePrice": {
                        required: "Lütfen Bir Satış Fiyatı Giriniz",
                    },
                    "salesCurrencyId": {
                        required: "Lütfen Satış Fiyatı Para Birimi Giriniz",
                    },
                    "paperWeight": {
                        required: "Lütfen Bir Kağıt Ağırlığı Giriniz",
                    }
                },
                wrap: 'div',
                errorPlacement: function (error, element) {
                    error.css({ 'margin-top': '10px' });
                    error.addClass("arrow alert alert-danger")
                    error.insertAfter(element);
                }
            });

            //validation end
            // delete start
            $("#stock_unit_tbl").on("click", ".btn-delete", function () {
                var id = $(this).val();
                Swal.fire({
                    title: 'Emin misiniz?',
                    text: "Kaydı silmek üzeresiniz! Bu kayıt başka bir tabloda ikincil anahtar olabilir ve o kaydın da silinmesine yol açabilir. Yine de silelim mi?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Evet, silelim!',
                    cancelButtonText: 'iptal'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: "/StockUnit/Delete/?id=" + id,
                            type: "DELETE",
                            success: function (response) {
                                Swal.fire(
                                    'Başarılı!',
                                    'Kayıt Silindi',
                                    'success'
                                );
                                getStockUnitTable();
                            },
                            error: function (xhr) {

                                console.log(xhr.responseText);
                            }
                        });

                    }
                })
            });
            //delete end

        })
    </script>

}